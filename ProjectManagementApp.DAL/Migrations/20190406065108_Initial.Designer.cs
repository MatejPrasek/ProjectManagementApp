// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectManagementApp.DAL;

namespace ProjectManagementApp.DAL.Migrations
{
    [DbContext(typeof(ProjectManagementAppDbContext))]
    [Migration("20190406065108_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AuthorId");

                    b.Property<string>("Picture");

                    b.Property<string>("Text");

                    b.Property<Guid?>("ThreadId");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ThreadId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.Membership", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Position");

                    b.Property<Guid?>("TeamId");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.Thread", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("TeamId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Nickname");

                    b.Property<string>("Password");

                    b.Property<string>("ProfilePicture");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.UserLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Action");

                    b.Property<Guid?>("CommentId");

                    b.Property<Guid?>("TeamId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.Comment", b =>
                {
                    b.HasOne("ProjectManagementApp.DAL.Entities.User", "Author")
                        .WithMany("Comments")
                        .HasForeignKey("AuthorId");

                    b.HasOne("ProjectManagementApp.DAL.Entities.Thread", "Thread")
                        .WithMany("Comments")
                        .HasForeignKey("ThreadId");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.Membership", b =>
                {
                    b.HasOne("ProjectManagementApp.DAL.Entities.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId");

                    b.HasOne("ProjectManagementApp.DAL.Entities.User", "User")
                        .WithMany("Teams")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.Thread", b =>
                {
                    b.HasOne("ProjectManagementApp.DAL.Entities.Team", "Team")
                        .WithMany("Threads")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("ProjectManagementApp.DAL.Entities.UserLog", b =>
                {
                    b.HasOne("ProjectManagementApp.DAL.Entities.Comment", "Comment")
                        .WithMany("Logs")
                        .HasForeignKey("CommentId");

                    b.HasOne("ProjectManagementApp.DAL.Entities.Team", "Team")
                        .WithMany("Logs")
                        .HasForeignKey("TeamId");

                    b.HasOne("ProjectManagementApp.DAL.Entities.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
